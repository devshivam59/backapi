const express = require("express");
const multer = require("multer");
const path = require("path");
const { auth, authorizeAdmin } = require("../middleware/auth");
const marketController = require("../controllers/marketController");

const router = express.Router();

// Configure multer for file uploads
const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, 'uploads/')
  },
  filename: function (req, file, cb) {
    // Generate unique filename
    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);
    cb(null, file.fieldname + '-' + uniqueSuffix + path.extname(file.originalname));
  }
});

const fileFilter = (req, file, cb) => {
  // Accept only CSV files
  if (file.mimetype === 'text/csv' || 
      file.mimetype === 'application/csv' || 
      file.originalname.toLowerCase().endsWith('.csv')) {
    cb(null, true);
  } else {
    cb(new Error('Only CSV files are allowed!'), false);
  }
};

const upload = multer({ 
  storage: storage,
  fileFilter: fileFilter,
  limits: {
    fileSize: 50 * 1024 * 1024 // 50MB limit
  }
});

// Public routes (no authentication required)
router.get("/instruments", marketController.getInstruments);
router.get("/instruments/stats", marketController.getInstrumentStats);
router.get("/instruments/search", marketController.searchInstruments);
router.get("/instruments/:id", marketController.getInstrument);

// Protected routes (authentication required)
router.post("/instruments/import", 
  auth, 
  authorizeAdmin, 
  upload.single("file"), 
  marketController.importInstruments
);

module.exports = router;
